
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	LCDdisplayV2.asm
	Object File:	LCDdisplayV2.hex
	List File:	LCDdisplayV2.lst



 Line  I  Addr  Code            Source

    1:				; Title: Light Show
    2:				; Description:
    3:				; Author: Cody Somers, 11271716
    4:				; Date Created: Oct 10, 2022
    5:				; Last Edited: Oct , 2022
    6:				; Due Date: Nov 1, 2022
    7:				; Microcontroller: 8051 with Paulmon
    8:				; Variables:
    9:				;   Inputs:
   10:				;   Outputs:
   11:
   12:				;---------Initialize Board----------
   13:		N      8000	locat  EQU 8000h                ;Location for this program
   14:		N      8000	ORG    locat
   15:
   16:	  8000	A5 E5 E0 A5	DB     0A5h,0E5h,0E0h,0A5h      ;signiture bytes
   17:	  8004	23 FF 00 00	DB     35,255,0,0               ;id (35=prog)
   18:	  8008	00 00 00 00	DB     0,0,0,0                  ;prompt code vector
   19:	  800C	00 00 00 00	DB     0,0,0,0                  ;reserved
   20:	  8010	00 00 00 00	DB     0,0,0,0                  ;reserved
   21:	  8014	00 00 00 00	DB     0,0,0,0                  ;reserved
   22:	  8018	00 00 00 00	DB     0,0,0,0                  ;user defined
   23:	  801C	FF FF FF FF	DB     255,255,255,255          ;length and checksum (255=unused)
   24:	  8020	41 73 73 69	DB     "Assignment3",0	      ;max 31 characters, plus the zero
	  8024	67 6E 6D 65
	  8028	6E 74 33 00
   25:
   26:		N      F800	port_a EQU 0F800h           ; Location of port A
   27:		N      F801	port_b EQU 0F801h           ; Location of port B
   28:		N      F803	port_abc_pgm EQU 0F803h     ; Configuration byte for ports A,B,C
   29:
   30:		N      FE00	lcd_command_wr EQU 0FE00h ; Write only
   31:		N      FE01	lcd_status_rd EQU 0FE01h ; Read only
   32:		N      FE02	lcd_data_wr EQU 0FE02h ; Write only
   33:		N      FE03	lcd_data_rd EQU 0FE03h ; Read only
   34:
   35:		N      8040	ORG    locat+64             ; executable code begins here
   36:
   37:				;-----------Configure Ports----------
   38:	  8040	90 F8 03	MOV DPTR, #port_abc_pgm     ; Configuration byte for ports A,B,C
   39:	  8043	74 80		MOV A, #128
   40:	  8045	F0		MOVX @DPTR, A
   41:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   42:				;--------Initialize LCD Screen--------
   43:				; The steps follow the timing guide. So we power on, wait for 15ms.
   44:				; Set the function in 8bit mode
   45:				; Wait again for 4.1ms
   46:				; Set the function in 8bit mode
   47:				; Wait again for 100us
   48:				; Set the function in 8bit mode one final time. Then the BF can be checked and
   49:				; the rest of the initialization process can happen.
   50:				; This involves setting it to 4bit mode, then clearing display etc.
   51:
   52:	  8046			initialize_LCD:
   53:	  8046	78 C8		MOV R0, #200
   54:	  8048	79 C8		MOV R1, #200
   55:	  804A			init_delay: ; Set for a 15ms delay
   56:	  804A	D8 FE		  DJNZ R0, init_delay
   57:	  804C	78 C8		  MOV R0, #200
   58:	  804E	D9 FA		  DJNZ R1, init_delay
   59:
   60:				; Function Set Command (8-bit interface)
   61:	  8050	90 FE 00	MOV DPTR, #lcd_command_wr
   62:	  8053	74 30		MOV A, #30h ; Necessary value that sets DB5,4 to high (also sets DB3high, but ignored)
   63:	  8055	F0		MOVX @DPTR, A
   64:
   65:				; Wait for 4.3ms
   66:	  8056	78 2D		MOV R0, #45
   67:	  8058	79 2D		MOV R1, #45
   68:	  805A			init_delay2: ; Set for a 4.3ms delay
   69:	  805A	D8 FE		  DJNZ R0, init_delay2
   70:	  805C	78 2D		  MOV R0, #45
   71:	  805E	D9 FA		  DJNZ R1, init_delay2
   72:
   73:				; Function Set Command (8-bit interface)
   74:	  8060	90 FE 00	MOV DPTR, #lcd_command_wr
   75:	  8063	74 30		MOV A, #30h ; Necessary value that sets DB5,4 to high (also sets DB3high, but ignored)
   76:	  8065	F0		MOVX @DPTR, A
   77:
   78:				; Wait for 100us
   79:	  8066	78 FA		MOV R0, #250
   80:	  8068			init_delay3: ; Set for a 100us delay
   81:	  8068	D8 FE		  DJNZ R0, init_delay3
   82:
   83:				; Function Set Command (8-bit interface)
   84:	  806A	90 FE 00	MOV DPTR, #lcd_command_wr
   85:	  806D	74 30		MOV A, #30h ; Necessary value that sets DB5,4 to high (also sets DB3high, but ignored)
   86:	  806F	F0		MOVX @DPTR, A
   87:
   88:				; Wait for 4.3ms. This one might not be necessary
   89:	  8070	78 2D		MOV R0, #45
   90:	  8072	79 2D		MOV R1, #45
   91:	  8074			init_delay9: ; Set for a 4.3ms delay
   92:	  8074	D8 FE		  DJNZ R0, init_delay9
   93:	  8076	78 2D		  MOV R0, #45
   94:	  8078	D9 FA		  DJNZ R1, init_delay9
   95:
   96:				; Set into 4-bit mode
   97:	  807A	11 D8		ACALL busy_check

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   98:	  807C	90 FE 00	MOV DPTR, #lcd_command_wr
   99:	  807F	74 20		MOV A, #20h ; Sets it to 4-bit mode
  100:	  8081	F0		MOVX @DPTR, A
  101:
  102:				; Set the rest of the stuff. Everything from this point on will be required to send or receive data
				twice.
  103:				;ACALL busy_check
  104:	  8082	90 FE 00	MOV DPTR, #lcd_command_wr
  105:	  8085	74 02		MOV A, #2h ; Sets it to 4-bit mode
  106:	  8087	F0		MOVX @DPTR, A
  107:				; Might need a busy check in here.
  108:	  8088	90 FE 00	MOV DPTR, #lcd_command_wr
  109:	  808B	74 08		MOV A, #8h ; Sets it to 2 line display
  110:	  808D	F0		MOVX @DPTR, A
  111:
  112:				; Turn on display, with cursor and blinking cursor disabled
  113:	  808E	11 D8		ACALL busy_check
  114:	  8090	90 FE 00	MOV DPTR, #lcd_command_wr
  115:	  8093	74 00		MOV A, #0h
  116:	  8095	F0		MOVX @DPTR, A
  117:				; Might need a busy check in here.
  118:	  8096	90 FE 00	MOV DPTR, #lcd_command_wr
  119:	  8099	74 0C		MOV A, #0Ch
  120:	  809B	F0		MOVX @DPTR, A
  121:
  122:				; Set shift mode to right display shift
  123:	  809C	11 D8		ACALL busy_check
  124:	  809E	90 FE 00	MOV DPTR, #lcd_command_wr
  125:	  80A1	74 01		MOV A, #1h
  126:	  80A3	F0		MOVX @DPTR, A
  127:				; Might need a busy check in here.
  128:	  80A4	90 FE 00	MOV DPTR, #lcd_command_wr
  129:	  80A7	74 0C		MOV A, #0Ch
  130:	  80A9	F0		MOVX @DPTR, A
  131:
  132:				; Set display buffer RAM address. This sets the cursor to the beginning of the first line.
  133:	  80AA	11 D8		ACALL busy_check
  134:	  80AC	90 FE 00	MOV DPTR, #lcd_command_wr
  135:	  80AF	74 08		MOV A, #8h
  136:	  80B1	F0		MOVX @DPTR, A
  137:				; Might need a busy check in here.
  138:	  80B2	90 FE 00	MOV DPTR, #lcd_command_wr
  139:	  80B5	74 00		MOV A, #0h
  140:	  80B7	F0		MOVX @DPTR, A
  141:
  142:				; Set entry mode so that cursor moves to the right but display not shifted
  143:	  80B8	11 D8		ACALL busy_check
  144:	  80BA	90 FE 00	MOV DPTR, #lcd_command_wr
  145:	  80BD	74 00		MOV A, #0h
  146:	  80BF	F0		MOVX @DPTR, A
  147:				; Might need a busy check in here.
  148:	  80C0	90 FE 00	MOV DPTR, #lcd_command_wr
  149:	  80C3	74 06		MOV A, #6h
  150:	  80C5	F0		MOVX @DPTR, A
  151:
  152:	  80C6	11 E4		ACALL clear_disp

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  153:
  154:				; Print the letter C
  155:	  80C8	11 D8		ACALL busy_check
  156:	  80CA	90 FE 02	MOV DPTR, #lcd_data_wr
  157:	  80CD	74 04		MOV A, #4h ; Print the letter
  158:	  80CF	F0		MOVX @DPTR, A
  159:	  80D0	90 FE 02	MOV DPTR, #lcd_data_wr
  160:	  80D3	74 03		MOV A, #3h ; Print the letter
  161:	  80D5	F0		MOVX @DPTR, A
  162:
  163:	  80D6	80 24		SJMP theend
  164:
  165:
  166:
  167:
  168:				; swap command to get the second nibble.
  169:
  170:
  171:				;-----------Subroutines------------
  172:
  173:				; Code for checking that the LCD is not busy.
  174:	  80D8			busy_check:
  175:	  80D8	90 FE 01	  MOV DPTR, #lcd_status_rd
  176:	  80DB			  lcd_wait:
  177:	  80DB	E0		    MOVX A, @DPTR
  178:	  80DC	30 E7 03	    JNB acc.7, lcd_go
  179:	  80DF	E0		    MOVX A, @DPTR
  180:	  80E0	80 F9		    SJMP lcd_wait
  181:	  80E2			    lcd_go:
  182:	  80E2	E0		    MOVX A, @DPTR
  183:	  80E3	22		RET
  184:
  185:				; Clear the display on the board
  186:	  80E4			clear_disp:
  187:	  80E4	11 D8		  ACALL busy_check
  188:	  80E6	90 FE 00	  MOV DPTR, #lcd_command_wr
  189:	  80E9	74 00		  MOV A, #0h
  190:	  80EB	F0		  MOVX @DPTR, A
  191:				  ; Might need a busy check in here.
  192:	  80EC	90 FE 00	  MOV DPTR, #lcd_command_wr
  193:	  80EF	74 01		  MOV A, #1h
  194:	  80F1	F0		  MOVX @DPTR, A
  195:	  80F2	22		RET
  196:
  197:
  198:				;-------- Garbage below-------------
  199:				; Move the cursor to the home position
  200:	  80F3			move_cursor_home:
  201:				  ;MOV R0, A ; Save value in A
  202:	  80F3	11 D8		  ACALL busy_check ; Check if busy
  203:	  80F5	90 FE 00	  MOV DPTR, #lcd_command_wr
  204:	  80F8	74 02		  MOV A, #02h ; Move cursor to home position
  205:	  80FA	F0		  MOVX @DPTR, A
  206:				  ;MOV A, R0 ; Return value to A.
  207:	  80FB	22		RET
  208:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  209:	  80FC			theend:
  210:				END                         ; End of program.





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BUSY_CHECK			  CODE	    80D8	 174
CLEAR_DISP			  CODE	    80E4	 186
CY				  BIT	      D7
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INITIALIZE_LCD			  CODE	    8046	  52
INIT_DELAY			  CODE	    804A	  55
INIT_DELAY2			  CODE	    805A	  68
INIT_DELAY3			  CODE	    8068	  80
INIT_DELAY9			  CODE	    8074	  91
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LCD_COMMAND_WR			  NUMBER    FE00	  30
LCD_DATA_RD			  NUMBER    FE03	  33
LCD_DATA_WR			  NUMBER    FE02	  32
LCD_GO				  CODE	    80E2	 181
LCD_STATUS_RD			  NUMBER    FE01	  31
LCD_WAIT			  CODE	    80DB	 176
LOCAT				  NUMBER    8000	  13
MOVE_CURSOR_HOME		  CODE	    80F3	 200
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PORT_A				  NUMBER    F800	  26
PORT_ABC_PGM			  NUMBER    F803	  28
PORT_B				  NUMBER    F801	  27

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
THEEND				  CODE	    80FC	 209
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
